// Code generated by protoc-gen-go.
// source: item.proto
// DO NOT EDIT!

/*
Package item is a generated protocol buffer package.

It is generated from these files:
	item.proto

It has these top-level messages:
	ItemListPageRequest
*/
package item

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import kudu_types "github.com/rnd/kudu/protos/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ItemListRequest holds list of item.
type ItemListPageRequest struct {
	Item []*kudu_types.Item `protobuf:"bytes,1,rep,name=item" json:"item,omitempty"`
}

func (m *ItemListPageRequest) Reset()                    { *m = ItemListPageRequest{} }
func (m *ItemListPageRequest) String() string            { return proto.CompactTextString(m) }
func (*ItemListPageRequest) ProtoMessage()               {}
func (*ItemListPageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ItemListPageRequest) GetItem() []*kudu_types.Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func init() {
	proto.RegisterType((*ItemListPageRequest)(nil), "kudu.item.ItemListPageRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ItemService service

type ItemServiceClient interface {
	PageList(ctx context.Context, in *ItemListPageRequest, opts ...grpc.CallOption) (*kudu_types.PageResponse, error)
}

type itemServiceClient struct {
	cc *grpc.ClientConn
}

func NewItemServiceClient(cc *grpc.ClientConn) ItemServiceClient {
	return &itemServiceClient{cc}
}

func (c *itemServiceClient) PageList(ctx context.Context, in *ItemListPageRequest, opts ...grpc.CallOption) (*kudu_types.PageResponse, error) {
	out := new(kudu_types.PageResponse)
	err := grpc.Invoke(ctx, "/kudu.item.ItemService/PageList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ItemService service

type ItemServiceServer interface {
	PageList(context.Context, *ItemListPageRequest) (*kudu_types.PageResponse, error)
}

func RegisterItemServiceServer(s *grpc.Server, srv ItemServiceServer) {
	s.RegisterService(&_ItemService_serviceDesc, srv)
}

func _ItemService_PageList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemListPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).PageList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kudu.item.ItemService/PageList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).PageList(ctx, req.(*ItemListPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ItemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kudu.item.ItemService",
	HandlerType: (*ItemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PageList",
			Handler:    _ItemService_PageList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "item.proto",
}

func init() { proto.RegisterFile("item.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x2c, 0x49, 0xcd,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0x2e, 0x4d, 0x29, 0xd5, 0x03, 0x09, 0x48,
	0x09, 0x96, 0x54, 0x16, 0xa4, 0x16, 0xeb, 0x83, 0x49, 0x88, 0xac, 0x92, 0x35, 0x97, 0xb0, 0x67,
	0x49, 0x6a, 0xae, 0x4f, 0x66, 0x71, 0x49, 0x40, 0x62, 0x7a, 0x6a, 0x50, 0x6a, 0x61, 0x69, 0x6a,
	0x71, 0x89, 0x90, 0x0a, 0x17, 0x0b, 0x48, 0x87, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x80,
	0x1e, 0xd8, 0x0c, 0x88, 0x3e, 0x90, 0xf2, 0x20, 0xb0, 0xac, 0x51, 0x28, 0x17, 0x37, 0x88, 0x17,
	0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xe4, 0xc6, 0xc5, 0x01, 0x32, 0x03, 0x64, 0x96, 0x90,
	0x9c, 0x1e, 0xdc, 0x5a, 0x3d, 0x2c, 0x16, 0x48, 0x49, 0x20, 0x1b, 0x09, 0x91, 0x28, 0x2e, 0xc8,
	0xcf, 0x2b, 0x4e, 0x55, 0x62, 0x70, 0x52, 0x8c, 0x92, 0x4f, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2,
	0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0xca, 0x4b, 0xd1, 0x07, 0xa9, 0xd5, 0x07, 0x3b, 0xb8, 0x58, 0x1f,
	0x64, 0x64, 0x12, 0x1b, 0x98, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xcd, 0xb7, 0x27,
	0xe9, 0x00, 0x00, 0x00,
}
